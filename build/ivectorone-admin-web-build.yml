trigger:
  branches:
    include:
    - main
  paths:
    include:
    - src/iVectorOne-Admin-Web

pool:
  vmImage: ubuntu-latest

variables:
- name : project
  value: 'iVectorOne-Admin-Web'
- name:  appVersion
  value : ''

steps:

- task: NodeTool@0
  inputs:
    versionSpec: '17.x'
  displayName: 'Install Node.js'

- task: PowerShell@2
  displayName: 'Set Version Number'
  inputs:
    targetType: 'inline'
    script: |
      $majorVersion = (Get-Date).ToString("yy") + (Get-Date).ToString("MM")
      $minorVersion =  (Get-Date).ToString("dd")
      $build = - [Math]::Truncate(((Get-Date -Hour 0 -Minute 0 -Second 0) - (Get-Date)).TotalMinutes)
      $VersionString = $majorVersion + '.' + $minorVersion + '.' + $build + '.' + $(Build.BuildId)
      Write-Host "##vso[task.setvariable variable=appVersion;]$VersionString"

- script: 
    npm install
  displayName: 'npm install'
  workingDirectory: 'src/$(project)'
  
- script: 
    npm run build
  displayName: 'npm build'
  workingDirectory: 'src/$(project)'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'intuitive-systems'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'Intuitive_iVectorOne_Admin_Web'
    cliProjectName: 'iVector One Admin Web'
    cliSources: 'src/$(project)'
    
- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: ArchiveFiles@2
  displayName: 'Publish Project'
  inputs:
    rootFolderOrFile: 'src/$(project)/dist'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(build.artifactStagingDirectory)/$(project)_$(appVersion).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts'
  inputs:
    PathtoPublish: '$(build.artifactStagingDirectory)'
    ArtifactName: '$(project)_$(appVersion)'
    publishLocation: 'Container'